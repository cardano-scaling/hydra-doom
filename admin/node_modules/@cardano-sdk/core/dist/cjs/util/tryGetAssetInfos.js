"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.tryGetAssetInfos = void 0;
const Asset_1 = require("../Cardano/types/Asset");
const promiseTimeout_1 = require("./promiseTimeout");
const tryGetAssetInfos = async ({ assetIds, assetProvider, logger, timeout }) => {
    try {
        return await (0, promiseTimeout_1.promiseTimeout)(assetProvider.getAssets({
            assetIds,
            extraData: { nftMetadata: true, tokenMetadata: true }
        }), timeout);
    }
    catch (error) {
        logger.error('Error: Failed to retrieve assets', error);
        return assetIds.map((assetId) => {
            const policyId = Asset_1.AssetId.getPolicyId(assetId);
            const name = Asset_1.AssetId.getAssetName(assetId);
            return {
                assetId,
                fingerprint: Asset_1.AssetFingerprint.fromParts(policyId, name),
                name,
                policyId,
                quantity: 0n,
                supply: 0n
            };
        });
    }
};
exports.tryGetAssetInfos = tryGetAssetInfos;
//# sourceMappingURL=tryGetAssetInfos.js.map