"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.tryConvertPlutusMapToUtf8Record = exports.isPlutusBigInt = exports.isConstrPlutusData = exports.isPlutusMap = exports.isPlutusList = exports.isAnyPlutusDataCollection = exports.isPlutusBoundedBytes = void 0;
const web_encoding_1 = require("web-encoding");
const isPlutusBoundedBytes = (plutusData) => ArrayBuffer.isView(plutusData);
exports.isPlutusBoundedBytes = isPlutusBoundedBytes;
const isAnyPlutusDataCollection = (plutusData) => typeof plutusData === 'object' && !(0, exports.isPlutusBoundedBytes)(plutusData);
exports.isAnyPlutusDataCollection = isAnyPlutusDataCollection;
const isPlutusList = (plutusData) => (0, exports.isAnyPlutusDataCollection)(plutusData) && 'items' in plutusData;
exports.isPlutusList = isPlutusList;
const isPlutusMap = (plutusData) => (0, exports.isAnyPlutusDataCollection)(plutusData) && 'data' in plutusData;
exports.isPlutusMap = isPlutusMap;
const isConstrPlutusData = (plutusData) => (0, exports.isAnyPlutusDataCollection)(plutusData) && 'fields' in plutusData;
exports.isConstrPlutusData = isConstrPlutusData;
const isPlutusBigInt = (plutusData) => typeof plutusData === 'bigint';
exports.isPlutusBigInt = isPlutusBigInt;
const utf8Decoder = new web_encoding_1.TextDecoder('utf8', { fatal: true });
const tryConvertPlutusDataToUtf8String = (data) => {
    if (!(0, exports.isPlutusBoundedBytes)(data))
        return data;
    try {
        return utf8Decoder.decode(data);
    }
    catch {
        return data;
    }
};
const tryConvertPlutusMapToUtf8Record = (map, logger) => {
    const record = {};
    for (const [key, value] of map.data.entries()) {
        const keyAsStr = tryConvertPlutusDataToUtf8String(key);
        if (typeof keyAsStr !== 'string') {
            logger.warn('Failed to decode plutus map key', key);
            continue;
        }
        record[keyAsStr] = tryConvertPlutusDataToUtf8String(value);
    }
    return record;
};
exports.tryConvertPlutusMapToUtf8Record = tryConvertPlutusMapToUtf8Record;
//# sourceMappingURL=plutusDataUtils.js.map