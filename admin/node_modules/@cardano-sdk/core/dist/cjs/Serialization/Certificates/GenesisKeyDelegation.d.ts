import * as Crypto from '@cardano-sdk/crypto';
import { HexBlob } from '@cardano-sdk/util';
import type * as Cardano from '../../Cardano';
export declare class GenesisKeyDelegation {
    #private;
    constructor(genesisHash: Crypto.Hash28ByteBase16, genesisDelegateHash: Crypto.Hash28ByteBase16, vrfKeyHash: Crypto.Hash32ByteBase16);
    toCbor(): HexBlob;
    static fromCbor(cbor: HexBlob): GenesisKeyDelegation;
    toCore(): Cardano.GenesisKeyDelegationCertificate;
    static fromCore(cert: Cardano.GenesisKeyDelegationCertificate): GenesisKeyDelegation;
    genesisHash(): Crypto.Hash28ByteBase16;
    setGenesisHash(genesisHash: Crypto.Hash28ByteBase16): void;
    genesisDelegateHash(): Crypto.Hash28ByteBase16;
    setGenesisDelegateHash(genesisDelegateHash: Crypto.Hash28ByteBase16): void;
    vrfKeyHash(): Crypto.Hash32ByteBase16;
    setVrfKeyHash(vrfKeyHash: Crypto.Hash32ByteBase16): void;
}
//# sourceMappingURL=GenesisKeyDelegation.d.ts.map