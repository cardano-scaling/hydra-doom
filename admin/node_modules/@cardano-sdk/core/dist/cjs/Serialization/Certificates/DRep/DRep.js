"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _DRep_credential, _DRep_kind, _DRep_originalBytes;
Object.defineProperty(exports, "__esModule", { value: true });
exports.DRep = void 0;
const Crypto = __importStar(require("@cardano-sdk/crypto"));
const CBOR_1 = require("../../CBOR");
const Address_1 = require("../../../Cardano/Address/Address");
const DRepKind_1 = require("./DRepKind");
const util_1 = require("@cardano-sdk/util");
const Governance_1 = require("../../../Cardano/types/Governance");
class DRep {
    constructor(kind, credential) {
        _DRep_credential.set(this, void 0);
        _DRep_kind.set(this, void 0);
        _DRep_originalBytes.set(this, undefined);
        __classPrivateFieldSet(this, _DRep_credential, credential, "f");
        __classPrivateFieldSet(this, _DRep_kind, kind, "f");
    }
    toCbor() {
        const writer = new CBOR_1.CborWriter();
        if (__classPrivateFieldGet(this, _DRep_originalBytes, "f"))
            return __classPrivateFieldGet(this, _DRep_originalBytes, "f");
        if (__classPrivateFieldGet(this, _DRep_kind, "f") === DRepKind_1.DRepKind.KeyHash || __classPrivateFieldGet(this, _DRep_kind, "f") === DRepKind_1.DRepKind.ScriptHash) {
            writer.writeStartArray(2);
            writer.writeInt(__classPrivateFieldGet(this, _DRep_credential, "f").type);
            writer.writeByteString(Buffer.from(__classPrivateFieldGet(this, _DRep_credential, "f").hash, 'hex'));
            return writer.encodeAsHex();
        }
        writer.writeStartArray(1);
        writer.writeInt(__classPrivateFieldGet(this, _DRep_kind, "f"));
        return writer.encodeAsHex();
    }
    static fromCbor(cbor) {
        const reader = new CBOR_1.CborReader(cbor);
        reader.readStartArray();
        const kind = Number(reader.readInt());
        if (kind === DRepKind_1.DRepKind.KeyHash || kind === DRepKind_1.DRepKind.ScriptHash) {
            const hash = Crypto.Hash28ByteBase16(util_1.HexBlob.fromBytes(reader.readByteString()));
            if (kind === DRepKind_1.DRepKind.KeyHash) {
                return DRep.newKeyHash(hash);
            }
            return DRep.newScriptHash(hash);
        }
        reader.readEndArray();
        if (kind === DRepKind_1.DRepKind.Abstain)
            return DRep.newAlwaysAbstain();
        return DRep.newAlwaysNoConfidence();
    }
    toCore() {
        if (__classPrivateFieldGet(this, _DRep_kind, "f") === DRepKind_1.DRepKind.KeyHash || __classPrivateFieldGet(this, _DRep_kind, "f") === DRepKind_1.DRepKind.ScriptHash)
            return __classPrivateFieldGet(this, _DRep_credential, "f");
        if (__classPrivateFieldGet(this, _DRep_kind, "f") === DRepKind_1.DRepKind.Abstain)
            return {
                __typename: 'AlwaysAbstain'
            };
        return {
            __typename: 'AlwaysNoConfidence'
        };
    }
    static fromCore(deleg) {
        if ((0, Governance_1.isDRepAlwaysAbstain)(deleg))
            return DRep.newAlwaysAbstain();
        if ((0, Governance_1.isDRepAlwaysNoConfidence)(deleg))
            return DRep.newAlwaysNoConfidence();
        if (deleg.type === Address_1.CredentialType.KeyHash)
            return DRep.newKeyHash(deleg.hash);
        return DRep.newScriptHash(deleg.hash);
    }
    static newKeyHash(keyHash) {
        return new DRep(DRepKind_1.DRepKind.KeyHash, {
            hash: keyHash,
            type: Address_1.CredentialType.KeyHash
        });
    }
    static newScriptHash(scriptHash) {
        return new DRep(DRepKind_1.DRepKind.ScriptHash, {
            hash: scriptHash,
            type: Address_1.CredentialType.ScriptHash
        });
    }
    static newAlwaysAbstain() {
        return new DRep(DRepKind_1.DRepKind.Abstain, undefined);
    }
    static newAlwaysNoConfidence() {
        return new DRep(DRepKind_1.DRepKind.NoConfidence, undefined);
    }
    kind() {
        return __classPrivateFieldGet(this, _DRep_kind, "f");
    }
    toKeyHash() {
        if (__classPrivateFieldGet(this, _DRep_kind, "f") !== DRepKind_1.DRepKind.KeyHash)
            return undefined;
        return __classPrivateFieldGet(this, _DRep_credential, "f")?.hash;
    }
    toScriptHash() {
        if (__classPrivateFieldGet(this, _DRep_kind, "f") !== DRepKind_1.DRepKind.ScriptHash)
            return undefined;
        return __classPrivateFieldGet(this, _DRep_credential, "f")?.hash;
    }
}
exports.DRep = DRep;
_DRep_credential = new WeakMap(), _DRep_kind = new WeakMap(), _DRep_originalBytes = new WeakMap();
//# sourceMappingURL=DRep.js.map