import { AuthCommitteeHot } from './AuthCommitteeHot';
import { CertificateKind } from './CertificateKind';
import { GenesisKeyDelegation } from './GenesisKeyDelegation';
import { HexBlob } from '@cardano-sdk/util';
import { MoveInstantaneousReward } from './MoveInstantaneousReward';
import { PoolRegistration } from './PoolRegistration';
import { PoolRetirement } from './PoolRetirement';
import { RegisterDelegateRepresentative } from './RegisterDelegateRepresentative';
import { Registration } from './Registration';
import { ResignCommitteeCold } from './ResignCommitteeCold';
import { StakeDelegation } from './StakeDelegation';
import { StakeDeregistration } from './StakeDeregistration';
import { StakeRegistration } from './StakeRegistration';
import { StakeRegistrationDelegation } from './StakeRegistrationDelegation';
import { StakeVoteDelegation } from './StakeVoteDelegation';
import { StakeVoteRegistrationDelegation } from './StakeVoteRegistrationDelegation';
import { UnregisterDelegateRepresentative } from './UnregisterDelegateRepresentative';
import { Unregistration } from './Unregistration';
import { UpdateDelegateRepresentative } from './UpdateDelegateRepresentative';
import { VoteDelegation } from './VoteDelegation';
import { VoteRegistrationDelegation } from './VoteRegistrationDelegation';
import type * as Cardano from '../../Cardano';
export declare class Certificate {
    #private;
    toCbor(): HexBlob;
    static fromCbor(cbor: HexBlob): Certificate;
    toCore(): Cardano.Certificate;
    static fromCore(certificate: Cardano.Certificate): Certificate;
    static newStakeRegistration(stakeRegistration: StakeRegistration): Certificate;
    static newStakeDeregistration(stakeDeregistration: StakeDeregistration): Certificate;
    static newStakeDelegation(stakeDelegation: StakeDelegation): Certificate;
    static newPoolRegistration(poolRegistration: PoolRegistration): Certificate;
    static newPoolRetirement(poolRetirement: PoolRetirement): Certificate;
    static newGenesisKeyDelegation(genesisKeyDelegation: GenesisKeyDelegation): Certificate;
    static newMoveInstantaneousRewardsCert(moveInstantaneousRewards: MoveInstantaneousReward): Certificate;
    static newRegistrationCert(registration: Registration): Certificate;
    static newUnregistrationCert(unregistration: Unregistration): Certificate;
    static newVoteDelegationCert(voteDelegation: VoteDelegation): Certificate;
    static newStakeVoteDelegationCert(stakeVoteDelegation: StakeVoteDelegation): Certificate;
    static newStakeRegistrationDelegationCert(stakeRegistrationDelegation: StakeRegistrationDelegation): Certificate;
    static newVoteRegistrationDelegationCert(voteRegistrationDelegation: VoteRegistrationDelegation): Certificate;
    static newStakeVoteRegistrationDelegationCert(stakeVoteRegistrationDelegation: StakeVoteRegistrationDelegation): Certificate;
    static newAuthCommitteeHotCert(authCommitteeHot: AuthCommitteeHot): Certificate;
    static newResignCommitteeColdCert(resignCommitteeCold: ResignCommitteeCold): Certificate;
    static newRegisterDelegateRepresentativeCert(drepRegistration: RegisterDelegateRepresentative): Certificate;
    static newUnregisterDelegateRepresentativeCert(drepUnregistration: UnregisterDelegateRepresentative): Certificate;
    static newUpdateDelegateRepresentativeCert(updateDrep: UpdateDelegateRepresentative): Certificate;
    kind(): CertificateKind;
    asStakeRegistration(): StakeRegistration | undefined;
    asStakeDeregistration(): StakeDeregistration | undefined;
    asStakeDelegation(): StakeDelegation | undefined;
    asPoolRegistration(): PoolRegistration | undefined;
    asPoolRetirement(): PoolRetirement | undefined;
    asGenesisKeyDelegation(): GenesisKeyDelegation | undefined;
    asMoveInstantaneousRewardsCert(): MoveInstantaneousReward | undefined;
    asRegistrationCert(): Registration | undefined;
    asUnregistrationCert(): Unregistration | undefined;
    asVoteDelegationCert(): VoteDelegation | undefined;
    asStakeVoteDelegationCert(): StakeVoteDelegation | undefined;
    asStakeRegistrationDelegationCert(): StakeRegistrationDelegation | undefined;
    asVoteRegistrationDelegationCert(): VoteRegistrationDelegation | undefined;
    asStakeVoteRegistrationDelegationCert(): StakeVoteRegistrationDelegation | undefined;
    asAuthCommitteeHotCert(): AuthCommitteeHot | undefined;
    asResignCommitteeColdCert(): ResignCommitteeCold | undefined;
    asRegisterDelegateRepresentativeCert(): RegisterDelegateRepresentative | undefined;
    asUnregisterDelegateRepresentativeCert(): UnregisterDelegateRepresentative | undefined;
    asUpdateDelegateRepresentativeCert(): UpdateDelegateRepresentative | undefined;
}
//# sourceMappingURL=Certificate.d.ts.map