"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _Redeemer_tag, _Redeemer_index, _Redeemer_data, _Redeemer_exUnits, _Redeemer_originalBytes;
Object.defineProperty(exports, "__esModule", { value: true });
exports.Redeemer = void 0;
const Crypto = __importStar(require("@cardano-sdk/crypto"));
const CBOR_1 = require("../../CBOR");
const Common_1 = require("../../Common");
const util_1 = require("@cardano-sdk/util");
const PlutusData_1 = require("../../PlutusData");
const Transaction_1 = require("../../../Cardano/types/Transaction");
const RedeemerTag_1 = require("./RedeemerTag");
const misc_1 = require("../../../util/misc");
const REDEEMER_ARRAY_SIZE = 4;
const HASH_LENGTH_IN_BYTES = 32;
class Redeemer {
    constructor(tag, index, data, exUnits) {
        _Redeemer_tag.set(this, void 0);
        _Redeemer_index.set(this, void 0);
        _Redeemer_data.set(this, void 0);
        _Redeemer_exUnits.set(this, void 0);
        _Redeemer_originalBytes.set(this, undefined);
        __classPrivateFieldSet(this, _Redeemer_tag, tag, "f");
        __classPrivateFieldSet(this, _Redeemer_index, index, "f");
        __classPrivateFieldSet(this, _Redeemer_data, data, "f");
        __classPrivateFieldSet(this, _Redeemer_exUnits, exUnits, "f");
    }
    toCbor() {
        const writer = new CBOR_1.CborWriter();
        if (__classPrivateFieldGet(this, _Redeemer_originalBytes, "f"))
            return __classPrivateFieldGet(this, _Redeemer_originalBytes, "f");
        writer.writeStartArray(REDEEMER_ARRAY_SIZE);
        writer.writeInt(__classPrivateFieldGet(this, _Redeemer_tag, "f"));
        writer.writeInt(__classPrivateFieldGet(this, _Redeemer_index, "f"));
        writer.writeEncodedValue((0, misc_1.hexToBytes)(__classPrivateFieldGet(this, _Redeemer_data, "f").toCbor()));
        writer.writeEncodedValue((0, misc_1.hexToBytes)(__classPrivateFieldGet(this, _Redeemer_exUnits, "f").toCbor()));
        return writer.encodeAsHex();
    }
    static fromCbor(cbor) {
        const reader = new CBOR_1.CborReader(cbor);
        const length = reader.readStartArray();
        if (length !== REDEEMER_ARRAY_SIZE)
            throw new util_1.InvalidArgumentError('cbor', `Expected an array of ${REDEEMER_ARRAY_SIZE} elements, but got an array of ${length} elements`);
        const tag = Number(reader.readUInt());
        const index = reader.readUInt();
        const data = PlutusData_1.PlutusData.fromCbor(util_1.HexBlob.fromBytes(reader.readEncodedValue()));
        const exUnits = Common_1.ExUnits.fromCbor(util_1.HexBlob.fromBytes(reader.readEncodedValue()));
        reader.readEndArray();
        const redeemer = new Redeemer(tag, index, data, exUnits);
        __classPrivateFieldSet(redeemer, _Redeemer_originalBytes, cbor, "f");
        return redeemer;
    }
    toCore() {
        let purpose;
        switch (__classPrivateFieldGet(this, _Redeemer_tag, "f")) {
            case RedeemerTag_1.RedeemerTag.Spend:
                purpose = Transaction_1.RedeemerPurpose.spend;
                break;
            case RedeemerTag_1.RedeemerTag.Mint:
                purpose = Transaction_1.RedeemerPurpose.mint;
                break;
            case RedeemerTag_1.RedeemerTag.Cert:
                purpose = Transaction_1.RedeemerPurpose.certificate;
                break;
            case RedeemerTag_1.RedeemerTag.Reward:
                purpose = Transaction_1.RedeemerPurpose.withdrawal;
                break;
            case RedeemerTag_1.RedeemerTag.Voting:
                purpose = Transaction_1.RedeemerPurpose.vote;
                break;
            case RedeemerTag_1.RedeemerTag.Proposing:
                purpose = Transaction_1.RedeemerPurpose.propose;
                break;
            default:
                throw new util_1.InvalidStateError(`Invalid redeemer type ${__classPrivateFieldGet(this, _Redeemer_tag, "f")}`);
        }
        return {
            data: __classPrivateFieldGet(this, _Redeemer_data, "f").toCore(),
            executionUnits: __classPrivateFieldGet(this, _Redeemer_exUnits, "f").toCore(),
            index: Number(__classPrivateFieldGet(this, _Redeemer_index, "f")),
            purpose
        };
    }
    static fromCore(redeemer) {
        let tag;
        switch (redeemer.purpose) {
            case Transaction_1.RedeemerPurpose.spend:
                tag = RedeemerTag_1.RedeemerTag.Spend;
                break;
            case Transaction_1.RedeemerPurpose.mint:
                tag = RedeemerTag_1.RedeemerTag.Mint;
                break;
            case Transaction_1.RedeemerPurpose.certificate:
                tag = RedeemerTag_1.RedeemerTag.Cert;
                break;
            case Transaction_1.RedeemerPurpose.withdrawal:
                tag = RedeemerTag_1.RedeemerTag.Reward;
                break;
            case Transaction_1.RedeemerPurpose.vote:
                tag = RedeemerTag_1.RedeemerTag.Voting;
                break;
            case Transaction_1.RedeemerPurpose.propose:
                tag = RedeemerTag_1.RedeemerTag.Proposing;
                break;
            default:
                throw new util_1.InvalidStateError(`Invalid redeemer type ${redeemer.purpose}`);
        }
        return new Redeemer(tag, BigInt(redeemer.index), PlutusData_1.PlutusData.fromCore(redeemer.data), Common_1.ExUnits.fromCore(redeemer.executionUnits));
    }
    tag() {
        return __classPrivateFieldGet(this, _Redeemer_tag, "f");
    }
    setTag(tag) {
        __classPrivateFieldSet(this, _Redeemer_tag, tag, "f");
        __classPrivateFieldSet(this, _Redeemer_originalBytes, undefined, "f");
    }
    index() {
        return __classPrivateFieldGet(this, _Redeemer_index, "f");
    }
    setIndex(index) {
        __classPrivateFieldSet(this, _Redeemer_index, index, "f");
        __classPrivateFieldSet(this, _Redeemer_originalBytes, undefined, "f");
    }
    data() {
        return __classPrivateFieldGet(this, _Redeemer_data, "f");
    }
    setData(data) {
        __classPrivateFieldSet(this, _Redeemer_data, data, "f");
        __classPrivateFieldSet(this, _Redeemer_originalBytes, undefined, "f");
    }
    exUnits() {
        return __classPrivateFieldGet(this, _Redeemer_exUnits, "f");
    }
    setExUnits(exUnits) {
        __classPrivateFieldSet(this, _Redeemer_exUnits, exUnits, "f");
        __classPrivateFieldSet(this, _Redeemer_originalBytes, undefined, "f");
    }
    hash() {
        const hash = Crypto.blake2b(HASH_LENGTH_IN_BYTES).update(Buffer.from(this.toCbor(), 'hex')).digest();
        return Crypto.Hash32ByteBase16(util_1.HexBlob.fromBytes(hash));
    }
}
exports.Redeemer = Redeemer;
_Redeemer_tag = new WeakMap(), _Redeemer_index = new WeakMap(), _Redeemer_data = new WeakMap(), _Redeemer_exUnits = new WeakMap(), _Redeemer_originalBytes = new WeakMap();
//# sourceMappingURL=Redeemer.js.map