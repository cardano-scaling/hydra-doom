import { AssetName } from '../Cardano/types/Asset.js';
import { InvalidArgumentError } from '@cardano-sdk/util';
import crc8 from './crc8.js';
const ASSET_LABEL_LENGTH = 8;
const ASSET_LABEL_BRACKET = '0';
export const AssetNameLabel = (value) => value;
export const AssetNameLabelNum = {
    ReferenceNFT: 100,
    UserFT: 333,
    UserNFT: 222,
    UserRFT: 444,
    VirtualHandle: 0
};
const assertLabelNumInterval = (labelNum) => {
    if (labelNum < 0 || labelNum > 65535) {
        throw new InvalidArgumentError('Label num', `Label ${labelNum} out of range 0 - 65535.`);
    }
};
const checksum = (labelNumHex) => crc8(Uint8Array.from(Buffer.from(labelNumHex, 'hex')))
    .toString(16)
    .padStart(2, '0');
const isInvalidChecksum = (labelNumHex, labelChecksum) => labelChecksum !== checksum(labelNumHex);
const isInvalidLength = (label) => label.length !== ASSET_LABEL_LENGTH;
const isInvalidBracket = (lead, end) => lead !== ASSET_LABEL_BRACKET || end !== ASSET_LABEL_BRACKET;
const assetNameLabelHexToNum = (label) => {
    const labelLeadBracket = label[0];
    const labelEndBracket = label[7];
    const labelNumHex = label.slice(1, 5);
    const labelChecksum = label.slice(5, 7);
    if (isInvalidLength(label) ||
        isInvalidBracket(labelLeadBracket, labelEndBracket) ||
        isInvalidChecksum(labelNumHex, labelChecksum)) {
        return null;
    }
    return AssetNameLabel(Number.parseInt(labelNumHex, 16));
};
AssetNameLabel.decode = (assetName) => {
    const assetNameLabel = assetName.slice(0, ASSET_LABEL_LENGTH);
    const assetNameContent = assetName.slice(ASSET_LABEL_LENGTH);
    const assetNameLabelNum = assetNameLabelHexToNum(assetNameLabel);
    if (assetNameLabelNum === null) {
        return null;
    }
    return {
        content: AssetName(assetNameContent),
        label: assetNameLabelNum
    };
};
AssetNameLabel.encode = (assetName, labelNum) => {
    assertLabelNumInterval(labelNum);
    const labelNumHex = labelNum.toString(16).padStart(4, ASSET_LABEL_BRACKET);
    return AssetName(`${ASSET_LABEL_BRACKET}${labelNumHex}${checksum(labelNumHex)}${ASSET_LABEL_BRACKET}${assetName}`);
};
//# sourceMappingURL=cip67.js.map