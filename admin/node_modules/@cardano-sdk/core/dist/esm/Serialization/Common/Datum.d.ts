import * as Crypto from '@cardano-sdk/crypto';
import { HexBlob } from '@cardano-sdk/util';
import { PlutusData } from '../PlutusData/index.js';
import type * as Cardano from '../../Cardano/index.js';
export declare const isDatumHash: (datum: unknown) => datum is Crypto.Hash32ByteBase16;
export declare enum DatumKind {
    DataHash = 0,
    InlineData = 1
}
export declare class Datum {
    #private;
    constructor(dataHash?: Cardano.DatumHash, inlineData?: PlutusData);
    toCbor(): HexBlob;
    static fromCbor(cbor: HexBlob): Datum;
    toCore(): Cardano.DatumHash | Cardano.PlutusData;
    static fromCore(datum: Cardano.DatumHash | Cardano.PlutusData): Datum;
    kind(): DatumKind;
    asDataHash(): Cardano.DatumHash | undefined;
    asInlineData(): PlutusData | undefined;
    static newDataHash(dataHash: Cardano.DatumHash): Datum;
    static newInlineData(inlineData: PlutusData): Datum;
}
//# sourceMappingURL=Datum.d.ts.map