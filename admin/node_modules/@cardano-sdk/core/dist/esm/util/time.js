export const Milliseconds = (value) => value;
export const Seconds = (value) => value;
export const Minutes = (value) => value;
export const Hours = (value) => value;
export const Days = (value) => value;
Hours.toDays = (value) => (value / 24);
Days.toHours = (value) => (value * 24);
Minutes.toHours = (value) => (value / 60);
Hours.toMinutes = (value) => (value * 60);
Seconds.toMinutes = (value) => (value / 60);
Minutes.toSeconds = (value) => (value * 60);
Seconds.toMilliseconds = (value) => (value * 1000);
Milliseconds.toSeconds = (value) => (value / 1000);
export class TimeSpan {
    constructor(elapsed) {
        this.elapsed = Milliseconds(0);
        this.elapsed = elapsed;
    }
    static fromMilliseconds(milliseconds) {
        return new TimeSpan(milliseconds);
    }
    static fromSeconds(seconds) {
        return new TimeSpan(Seconds.toMilliseconds(seconds));
    }
    static fromMinutes(minutes) {
        return new TimeSpan(Seconds.toMilliseconds(Minutes.toSeconds(minutes)));
    }
    static fromHours(hours) {
        return new TimeSpan(Seconds.toMilliseconds(Minutes.toSeconds(Hours.toMinutes(hours))));
    }
    getTotalDays() {
        return Hours.toDays(this.getTotalHours());
    }
    getTotalHours() {
        return Minutes.toHours(this.getTotalMinutes());
    }
    getTotalMinutes() {
        return Seconds.toMinutes(this.getTotalSeconds());
    }
    getTotalSeconds() {
        return Milliseconds.toSeconds(this.elapsed);
    }
    getTotalMilliseconds() {
        return this.elapsed;
    }
    getDays() {
        return Days(Math.floor(this.getTotalDays()));
    }
    getHours() {
        return Hours(Math.floor(this.getTotalHours() - this.getDays() * 24));
    }
    getMinutes() {
        return Minutes(Math.floor(this.getTotalMinutes() - Math.floor(this.getTotalHours()) * 60));
    }
    getSeconds() {
        return Seconds(Math.floor(this.getTotalSeconds() - Math.floor(this.getTotalMinutes()) * 60));
    }
    getMilliseconds() {
        return Milliseconds(this.elapsed - Math.floor(this.getTotalSeconds()) * 1000);
    }
    toString() {
        let result = this.getTotalSeconds() < 0 ? '-P' : 'P';
        let time = '';
        if (this.getHours() !== 0)
            time += `${Math.abs(this.getHours()).toString()}H`;
        if (this.getMinutes() !== 0)
            time += `${Math.abs(this.getMinutes()).toString()}M`;
        if (this.getSeconds() !== 0)
            time += `${Math.abs(this.getSeconds()).toString()}S`;
        if (this.getDays() !== 0 || time === '')
            result += `${Math.abs(this.getDays()).toString()}D`;
        if (time !== '')
            result += `T${time}`;
        return result;
    }
}
//# sourceMappingURL=time.js.map