export const StringUtils = {
    byteSize: (str) => new Blob([str]).size,
    chunkByBytes: (str, maxBytes) => {
        let chunkSize = 0;
        let chunkStart = 0;
        const result = [];
        for (let char = 0; char < str.length; char++) {
            const isEndOfArray = char === str.length - 1;
            const currentChunkSize = chunkSize + StringUtils.byteSize(str[char]);
            const nextCharSize = !isEndOfArray ? currentChunkSize + StringUtils.byteSize(str[char + 1]) : maxBytes + 1;
            const atLimit = currentChunkSize === maxBytes || nextCharSize > maxBytes || isEndOfArray;
            if (atLimit) {
                const chunk = str.slice(chunkStart, char + 1);
                result.push(chunk);
                chunkStart = char + 1;
                chunkSize = 0;
            }
            else {
                chunkSize = currentChunkSize;
            }
        }
        return result;
    }
};
//# sourceMappingURL=string.js.map