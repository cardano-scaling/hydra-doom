"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.areStringsEqualInConstantTime = exports.areNumbersEqualInConstantTime = exports.sameArrayItems = exports.strictEquals = exports.deepEquals = void 0;
const isEqual_js_1 = __importDefault(require("lodash/isEqual.js"));
const deepEquals = (a, b) => (0, isEqual_js_1.default)(a, b);
exports.deepEquals = deepEquals;
const strictEquals = (a, b) => a === b;
exports.strictEquals = strictEquals;
const sameArrayItems = (arrayA, arrayB, itemEquals) => arrayA.length === arrayB.length && arrayA.every((a) => arrayB.some((b) => itemEquals(a, b)));
exports.sameArrayItems = sameArrayItems;
const areNumbersEqualInConstantTime = (a, b) => (a ^ b) === 0;
exports.areNumbersEqualInConstantTime = areNumbersEqualInConstantTime;
const areStringsEqualInConstantTime = (a, b) => {
    const maxLength = Math.max(a.length, b.length);
    const results = Array.from({ length: maxLength }, (_, i) => (a.charCodeAt(i) === b.charCodeAt(i) ? 1 : 0));
    const areAllCharactersEqual = results.reduce((accumulator, currentValue) => (accumulator & currentValue), 1);
    return areAllCharactersEqual === 1;
};
exports.areStringsEqualInConstantTime = areStringsEqualInConstantTime;
//# sourceMappingURL=equals.js.map