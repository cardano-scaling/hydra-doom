"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.transformObj = void 0;
const isUndefined_js_1 = __importDefault(require("lodash/isUndefined.js"));
const merge_js_1 = __importDefault(require("lodash/merge.js"));
const deepOmitBy = (obj, predicate) => {
    if (Array.isArray(obj))
        return obj;
    if (obj && typeof obj === 'object') {
        return (Object.entries(obj)
            .map(([k, v]) => [k, typeof v === 'object' ? deepOmitBy(v, predicate) : v, predicate(v)])
            .reduce((result, [k, v, omit]) => (omit ? result : (0, merge_js_1.default)(result, { [k]: v })), {}));
    }
    return obj;
};
const transformObj = async (from, transformer, context) => {
    const entries = Object.entries(transformer);
    const result = Object.create({});
    for (const [key, value] of entries) {
        result[key] = await (typeof value === 'function'
            ? value(from, context)
            : (0, exports.transformObj)(from, value, context));
    }
    return deepOmitBy(result, isUndefined_js_1.default);
};
exports.transformObj = transformObj;
//# sourceMappingURL=transformer.js.map