import { Ed25519PrivateExtendedKeyHex, Ed25519PrivateNormalKeyHex } from '../hexTypes';
import { Ed25519PublicKey } from './Ed25519PublicKey';
import { Ed25519Signature } from './Ed25519Signature';
import { HexBlob } from '@cardano-sdk/util';
export declare const NORMAL_ED25519_PRIVATE_KEY_LENGTH = 32;
export declare const EXTENDED_ED25519_PRIVATE_KEY_LENGTH = 64;
export declare enum Ed25519PrivateKeyType {
    Normal = "Normal",
    Extended = "Extended"
}
export declare class Ed25519PrivateKey {
    #private;
    readonly __type: Ed25519PrivateKeyType;
    private constructor();
    toPublic(): Promise<Ed25519PublicKey>;
    sign(message: HexBlob): Promise<Ed25519Signature>;
    static fromNormalBytes(keyMaterial: Uint8Array): Ed25519PrivateKey;
    static fromExtendedBytes(keyMaterial: Uint8Array): Ed25519PrivateKey;
    static fromNormalHex(keyMaterial: Ed25519PrivateNormalKeyHex): Ed25519PrivateKey;
    static fromExtendedHex(keyMaterial: Ed25519PrivateExtendedKeyHex): Ed25519PrivateKey;
    bytes(): Uint8Array;
    hex(): Ed25519PrivateNormalKeyHex | Ed25519PrivateExtendedKeyHex;
}
//# sourceMappingURL=Ed25519PrivateKey.d.ts.map