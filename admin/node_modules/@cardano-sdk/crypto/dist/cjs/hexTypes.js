"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Hash28ByteBase16 = exports.Hash32ByteBase16 = exports.Bip32PublicKeyHashHex = exports.Ed25519KeyHashHex = exports.Ed25519PrivateNormalKeyHex = exports.Ed25519PrivateExtendedKeyHex = exports.Ed25519PublicKeyHex = exports.Bip32PrivateKeyHex = exports.Bip32PublicKeyHex = exports.Ed25519SignatureHex = exports.BIP32_PUBLIC_KEY_HASH_LENGTH = void 0;
const util_1 = require("@cardano-sdk/util");
exports.BIP32_PUBLIC_KEY_HASH_LENGTH = 28;
const Ed25519SignatureHex = (value) => (0, util_1.typedHex)(value, 128);
exports.Ed25519SignatureHex = Ed25519SignatureHex;
const Bip32PublicKeyHex = (key) => (0, util_1.typedHex)(key, 128);
exports.Bip32PublicKeyHex = Bip32PublicKeyHex;
const Bip32PrivateKeyHex = (key) => (0, util_1.typedHex)(key, 192);
exports.Bip32PrivateKeyHex = Bip32PrivateKeyHex;
const Ed25519PublicKeyHex = (value) => (0, util_1.typedHex)(value, 64);
exports.Ed25519PublicKeyHex = Ed25519PublicKeyHex;
const Ed25519PrivateExtendedKeyHex = (value) => (0, util_1.typedHex)(value, 128);
exports.Ed25519PrivateExtendedKeyHex = Ed25519PrivateExtendedKeyHex;
const Ed25519PrivateNormalKeyHex = (value) => (0, util_1.typedHex)(value, 64);
exports.Ed25519PrivateNormalKeyHex = Ed25519PrivateNormalKeyHex;
const Ed25519KeyHashHex = (value) => (0, util_1.typedHex)(value, 56);
exports.Ed25519KeyHashHex = Ed25519KeyHashHex;
const Bip32PublicKeyHashHex = (value) => (0, util_1.typedHex)(value, exports.BIP32_PUBLIC_KEY_HASH_LENGTH * 2);
exports.Bip32PublicKeyHashHex = Bip32PublicKeyHashHex;
const Hash32ByteBase16 = (value) => (0, util_1.typedHex)(value, 64);
exports.Hash32ByteBase16 = Hash32ByteBase16;
exports.Hash32ByteBase16.fromHexBlob = (value) => (0, util_1.castHexBlob)(value, 64);
const Hash28ByteBase16 = (value) => (0, util_1.typedHex)(value, 56);
exports.Hash28ByteBase16 = Hash28ByteBase16;
exports.Hash28ByteBase16.fromEd25519KeyHashHex = (value) => value;
//# sourceMappingURL=hexTypes.js.map