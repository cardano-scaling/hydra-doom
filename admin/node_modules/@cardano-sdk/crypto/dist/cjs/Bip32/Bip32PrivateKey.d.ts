/// <reference types="pouchdb-core" />
/// <reference types="node" />
import { Bip32PrivateKeyHex } from '../hexTypes';
import { Bip32PublicKey } from './Bip32PublicKey';
import { Ed25519PrivateKey } from '../Ed25519e';
export declare const BIP32_ED25519_PRIVATE_KEY_LENGTH = 96;
export declare class Bip32PrivateKey {
    #private;
    constructor(key: Uint8Array);
    static fromBip39Entropy(entropy: Buffer, password: string): Bip32PrivateKey;
    static fromBytes(key: Uint8Array): Bip32PrivateKey;
    static fromHex(key: Bip32PrivateKeyHex): Bip32PrivateKey;
    derive(derivationIndices: number[]): Promise<Bip32PrivateKey>;
    toRawKey(): Ed25519PrivateKey;
    toPublic(): Promise<Bip32PublicKey>;
    bytes(): Uint8Array;
    hex(): Bip32PrivateKeyHex;
}
//# sourceMappingURL=Bip32PrivateKey.d.ts.map