"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebSocket = void 0;
const isomorphic_ws_1 = __importDefault(require("isomorphic-ws"));
class WebSocket extends isomorphic_ws_1.default {
    constructor(addr, opts) {
        if (isBrowser) {
            super(addr);
        }
        else {
            super(addr, opts);
        }
        return (isBrowser && !isPolyfilled(this))
            ? Object.assign(this, browserPolyfill(this))
            : this;
    }
}
exports.WebSocket = WebSocket;
const browserPolyfill = (target) => {
    let listeners = [];
    function removeListener(event, fn) {
        listeners = listeners.reduce((acc, [e, orig, handler]) => {
            if (e === event && orig === fn) {
                target.removeEventListener(e, handler);
            }
            else {
                acc.push([e, orig, handler]);
            }
            return acc;
        }, []);
    }
    return {
        on(event, fn) {
            const handler = (e) => typeof e.data !== 'undefined' ? fn(e.data) : fn(e);
            listeners.push([event, fn, handler]);
            target.addEventListener(event, handler);
        },
        once(event, fn) {
            const handler = (e) => {
                removeListener(event, fn);
                typeof e.data !== 'undefined' ? fn(e.data) : fn(e);
            };
            listeners.push([event, fn, handler]);
            target.addEventListener(event, handler, { once: true });
        },
        setMaxListeners(_n) { },
        removeListener,
        removeAllListeners() {
            listeners.forEach(([event, _orig, handler]) => target.removeEventListener(event, handler));
            listeners = [];
        }
    };
};
const isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';
const isPolyfilled = (o) => typeof o.on === 'function' &&
    typeof o.once === 'function' &&
    typeof o.removeListener === 'function' &&
    typeof o.removeAllListeners === 'function';
//# sourceMappingURL=IsomorphicWebSocket.js.map