"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.isEvaluateTransactionSuccess = exports.handler = exports.evaluateTransaction = exports.errors = void 0;
const Connection_1 = require("../../Connection");
exports.errors = __importStar(require("./errors"));
function evaluateTransaction(context, serializedTransaction, additionalUtxo) {
    return (0, Connection_1.Method)({
        method: 'evaluateTransaction',
        params: {
            ...(additionalUtxo !== undefined ? { additionalUtxo } : {}),
            transaction: { cbor: serializedTransaction }
        }
    }, { handler }, context);
}
exports.evaluateTransaction = evaluateTransaction;
function handler(response, resolve, reject) {
    if (isEvaluateTransactionSuccess(response)) {
        resolve(response.result);
    }
    else {
        reject(response);
    }
}
exports.handler = handler;
function isEvaluateTransactionSuccess(response) {
    return Array.isArray(response?.result);
}
exports.isEvaluateTransactionSuccess = isEvaluateTransactionSuccess;
//# sourceMappingURL=index.js.map