import { Mirror } from '../Connection';
import { WebSocket } from '../IsomorphicWebSocket';
import { Ogmios, Block, Origin, Point, Tip } from '@cardano-ogmios/schema';
export interface ChainSynchronizationMessageHandlers {
    rollBackward(response: {
        point: Point | Origin;
        tip: Tip | Origin;
    }, nextBlock: () => void): Promise<void>;
    rollForward(response: {
        block: Block;
        tip: Tip | Origin;
    }, nextBlock: () => void): Promise<void>;
}
export declare function nextBlock(socket: WebSocket, options?: {
    id?: Mirror;
}): void;
export declare function handler(response: any, messageHandlers: ChainSynchronizationMessageHandlers, cb: () => void): Promise<void>;
export declare function isNextBlockResponse(response: any): response is Ogmios['NextBlockResponse'];
//# sourceMappingURL=nextBlock.d.ts.map