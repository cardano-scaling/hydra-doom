/// <reference types="node" />
import { Block, BlockBFT, BlockEBB, BlockPraos, TransactionOutput, UInt64 } from '@cardano-ogmios/schema';
import { EventEmitter } from 'events';
export declare const safeJSON: {
    $: any;
    sanitize(json: any, parentKey?: string): any;
    sanitizeFields(json: any, fields: string[]): any;
    sanitizeAdditionalFields(json: any, depth: number): any;
    sanitizeMetadatum(json: any): any;
    parse(raw: string): any;
    stringify(...args: any[]): string;
};
export declare function eventEmitterToGenerator<T>(eventEmitter: EventEmitter, eventName: string, match: (e: string) => T | null): () => AsyncGenerator<unknown, never, unknown>;
export declare function isObject($: any): $ is Object;
export declare function isBlockEBB(block: Block): block is BlockEBB;
export declare function isBlockBFT(block: Block): block is BlockBFT;
export declare function isBlockPraos(block: Block): block is BlockPraos;
export declare const CONSTANT_OUTPUT_SERIALIZATION_OVERHEAD = 160;
export declare const utxoSize: (output: TransactionOutput) => UInt64;
//# sourceMappingURL=util.d.ts.map